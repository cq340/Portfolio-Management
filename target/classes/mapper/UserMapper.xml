<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.citi.portfolio.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.citi.portfolio.model.User">
    <id column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="INI_MONEY" jdbcType="DOUBLE" property="iniMoney" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="TEL" jdbcType="INTEGER" property="tel" />
    <result column="ROLE" jdbcType="VARCHAR" property="role" />
    <result column="PASSWORD" jdbcType="VARCHAR" property="password" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    USER_ID, INI_MONEY, USER_NAME, TEL, ROLE, PASSWORD
  </sql>
  <select id="selectByExample" parameterType="com.citi.portfolio.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where USER_ID = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.citi.portfolio.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.citi.portfolio.model.User">
    insert into user (USER_ID, INI_MONEY, USER_NAME, 
      TEL, ROLE, PASSWORD
      )
    values (#{userId,jdbcType=INTEGER}, #{iniMoney,jdbcType=DOUBLE}, #{userName,jdbcType=VARCHAR}, 
      #{tel,jdbcType=INTEGER}, #{role,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.citi.portfolio.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="iniMoney != null">
        INI_MONEY,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="tel != null">
        TEL,
      </if>
      <if test="role != null">
        ROLE,
      </if>
      <if test="password != null">
        PASSWORD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="iniMoney != null">
        #{iniMoney,jdbcType=DOUBLE},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.citi.portfolio.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.iniMoney != null">
        INI_MONEY = #{record.iniMoney,jdbcType=DOUBLE},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        TEL = #{record.tel,jdbcType=INTEGER},
      </if>
      <if test="record.role != null">
        ROLE = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        PASSWORD = #{record.password,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set USER_ID = #{record.userId,jdbcType=INTEGER},
      INI_MONEY = #{record.iniMoney,jdbcType=DOUBLE},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      TEL = #{record.tel,jdbcType=INTEGER},
      ROLE = #{record.role,jdbcType=VARCHAR},
      PASSWORD = #{record.password,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.citi.portfolio.model.User">
    update user
    <set>
      <if test="iniMoney != null">
        INI_MONEY = #{iniMoney,jdbcType=DOUBLE},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        TEL = #{tel,jdbcType=INTEGER},
      </if>
      <if test="role != null">
        ROLE = #{role,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
    </set>
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.citi.portfolio.model.User">
    update user
    set INI_MONEY = #{iniMoney,jdbcType=DOUBLE},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      TEL = #{tel,jdbcType=INTEGER},
      ROLE = #{role,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR}
    where USER_ID = #{userId,jdbcType=INTEGER}
  </update>
</mapper>